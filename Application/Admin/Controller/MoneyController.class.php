<?php// +----------------------------------------------------------------------// | OneThink [ WE CAN DO IT JUST THINK IT ]// +----------------------------------------------------------------------// | Copyright (c) 2013 http://www.onethink.cn All rights reserved.// +----------------------------------------------------------------------// | Author: 麦当苗儿 <zuojiazi@vip.qq.com> <http://www.zjzit.cn>// +----------------------------------------------------------------------namespace Admin\Controller;/** * 后台用户控制器 * @author tang */class MoneyController extends AdminController {    /**     * 用户金币列表     * @author Tang     */    public function userCoin(){        $map['status']=1;        $field=array('uid','nickname','coin','last_login_time');        $count=M('member')->where($map)->field($field)->count();        $page=new \Think\Page($count,10);        $list=M('member')->where($map)->field($field)            ->order('last_login_time desc')            ->limit($page->firstRow,$page->listRows)            ->select();        $this->assign('_page',$page->show());        $this->assign('_list',$list);//        $this->log(1,'用户金币列表');        $this->display('usercoin');    }    /**     * 增加用户金币     * @author Tang     */    public function editCoin(){        $uid=I('get.id');        if(!$uid){            $this->error('未知的用户');        }        if(IS_POST){            $arr=I('post.');            $arr['coin']=intval($arr['coin']);            if(!$arr['coin']){                $this->error('金币需大于0');            }            if($arr['type']==1){                $msg='添加';                $res=M('member')->where(array('uid'=>$uid))->setInc('coin',$arr['coin']);            }else{                $msg='扣除';                $coin=M('member')->where(array('uid'=>$uid))->getField('coin');                if($coin<$arr['coin']){                    $this->error('所扣除的金币大于用户拥有的金币');                }                $res=M('member')->where(array('uid'=>$uid))->setDec('coin',$arr['coin']);            }            if($res){                if($arr['type']==1){                    $this->log(2,'给用户'.$msg.'金币',$uid,$arr['coin']);                }else{                    $this->log(4,'扣除'.$msg.'金币',$uid,$arr['coin']);                }                $arr['uid']=$uid;                $arr['order_id']=0;                $arr['foruid']=$uid;                $arr['type']=$arr['type']==1?1:2;                $arr['status']=1;                $arr['coin']=$arr['coin'];                $arr['style']='admin';                $arr['create_time']=time();                $arr['update_time']=time();                M('user_coin_log')->add($arr);                $this->success('添加金币成功',U('userCoin'));            }else{                $this->error('添加金币失败');            }        }else{            $info=M('member')->field(array('uid','nickname','coin'))->find($uid);            $this->assign('info',$info);//            $this->assign('uid',$uid);            $this->display('editcoin');        }    }    /**     * 用户充值记录     * @author Tang     */    public function index(){        $map['status']=2;        $map['type']=array('in','coin,vip');        $count=M('user_order_money')->where($map)->count();        $page=new \Think\Page($count,10);        $list=M('user_order_money')->where($map)            ->order('create_time desc')            ->limit($page->firstRow,$page->listRows)            ->select();        foreach($list as $key=>$v){            $list[$key]['user']=$this->getUserNickname($v['uid']);            $list[$key]['typename']=$this->getCoinTypeName($v['type']);        }        $this->assign('_page',$page->show());        $this->assign('_list',$list);//        $this->log(1,'充值列表');        $this->display();    }    /**     * 用户提现报表     * @author Tang     */    public function getMoney(){        $uid=I('uid');        if($uid){            $map['uid']=$uid;        }        $map['status']=array('neq',-1);        $map['type']='getmoney';        $count=M('user_order_money')->where($map)->count();        $page=new \Think\Page($count,10);        $list=M('user_order_money')->where($map)            ->order('create_time desc')            ->limit($page->firstRow,$page->listRows)            ->select();        foreach($list as $key=>$v){            $list[$key]['user']=$this->getUserNickname($v['uid']);            if($v['admin_uid']){                $list[$key]['adminuser']=$this->getUserNickname($v['admin_uid']);            }            $list[$key]['typename']='提现';            $list[$key]['statusname']=$this->getMoneyTypeName($v['status']);        }        $this->assign('_page',$page->show());        $this->assign('_list',$list);//        $this->log(1,'充值列表');        $this->display('getmoney');    }    /**     * 提现状态     * @author Tang     */    protected function getMoneyTypeName($status){        switch($status){            case 1:                $name='申请中';                break;            case 2:                $name='已提现';                break;            default:                break;        }        return $name;    }    /**     * 提现状态     * @author Tang     */    public function getMoneyStatus(){        $arr['status']=I('get.status');        $arr['id']=I('get.id');        if($arr['status']!=2){            $this->error('非法请求');        }        $arr['admin_uid']=is_login();        $arr['update_time']=time();        $res=M('user_order_money')->save($arr);        if($res){            $this->log(5,'修改提现状态',$arr['id']);            $this->success('修改成功',U('getMoney'));        }else{            $this->error('修改失败');        }    }    /**     * 财务统计     * @author Tang     */    public function countList(){        $map['status']=1;        $count=M('user_coin_log')->where($map)->count();        $page=new \Think\Page($count,10);        $list=M('user_coin_log')->where($map)            ->order('create_time desc')->limit($page->firstRow,$page->listRows)            ->select();        if($list){            foreach($list as $key=>$v){                $list[$key]['typename']=$this->coinChangeType($v['style']);                $list[$key]['nickname']=$this->getUserNickname($v['uid']);            }        }        $this->assign('_list',$list);        $this->assign('_page',$page->show());        $this->display('countlist');    }    /*个人统计*/    public function countOne(){        $uid=I('uid');        if(!$uid){            $this->error('未知的用户',U('countList'));        }        $begin=I('begin');        $end=I('end');        if($begin){            $map['create_time']=array('egt',strtotime($begin));        }        if($end){            $map['create_time']=array('elt',strtotime($end));        }        if($begin && $end){            $map['create_time']=array(array('egt',strtotime($begin)),array('elt',strtotime($end)),'and');        }        $map['uid']=$uid;        $map['status']=1;        $list=M('user_coin_log')->field(array('uid','sum(coin)'=>'coin','type','style','create_time'))            ->where($map)            ->order('create_time desc')            ->group('style,type')            ->select();        if($list){            $count=0;            foreach($list as $key=>$v){                $list[$key]['typename']=$this->coinChangeType($v['style']);                $list[$key]['nickname']=$this->getUserNickname($v['uid']);                if($v['type']==1){                    $count+=$v['coin'];                }elseif($v['type']==2){                    $count-=$v['coin'];                }            }            $ckey=count($list);            $list[$ckey]['typename']='总计';            $list[$ckey]['nickname']=$this->getUserNickname($uid);            $list[$ckey]['coin']=$count;            $list[$ckey]['create_time']=time();        }//        print_r($list);die;        $this->assign('_list',$list);        $this->display('countlist');    }    /*金币变更类型*/    protected function coinChangeType($type){        switch($type){            case 'video':                $name="观看视频";                break;            case 'phone':                $name="查看手机号码";                break;            case 'coin':                $name="充值";                break;            case 'vip':                $name="购买vip";                break;            case 'give':                $name="赠送金币";                break;            case 'get':                $name="获赠金币";                break;            case 'getmoney':                $name="提现";                break;            case 'admin':                $name="管理员操作";                break;            case 'datesys':                $name="约会手续费";                break;            case 'im':                $name="聊天";                break;            case 'refreezing':                $name="解冻";                break;            case 'datefree':                $name="约会解冻";                break;            case 'date':                $name="约会冻结";                break;            case 'dategivef':                $name="约会赠金冻结";                break;            case 'dategive':                $name="获取约会赠金";                break;            default:                break;        }        return $name;    }    /*导出*/    public function outExcel(){        $begin=I('begin');        $end=I('end');        if(!$begin || !$end){            $this->error("请选择起始结束时间");        }        $map['status']=1;        $map['type']="getmoney";        $map['is_out']=0;        $map['create_time']=array(array('egt',strtotime($begin)),array('elt',strtotime($end)),"and");        $field=array('id','coin','money','account');        $list=M('user_order_money')->field($field)->where($map)->order('create_time desc')->select();        if($list){            M('user_order_money')->where($map)->setField("is_out",1);            include "Data/PHPExcel_1.8.0/phpExcelDemo.php";            $excel=new \phpExcelDemo($list);            $excel->setName($begin."_".$end);            $excel->Add();            $excel->download();        }else{            $this->error("未查找到数据");        }    }    /**     * 获取充值类型     * @author Tang     */    protected function getCoinTypeName($type){        switch($type){            case 'coin':                $name='充值';                break;            case 'vip':                $name='购买VIP';                break;            case 'getmoney':                $name='提现';                break;            default:                break;        }        return $name;    }    /**     * 记录管理员操作日志     * @paragram 操作类型（1：查看，2：添加金币，3：修改金币比率,4:扣除金币,5:修改提现状态）     * @author Tang     */    protected function log($type,$action,$foruid=0,$coin=0){        $arr['uid']=is_login();        $arr['type']=$type;        $arr['action']=$action;        $arr['coin']=$coin;        $arr['foruid']=$foruid;        $arr['status']=1;        $arr['create_time']=time();        $arr['update_time']=time();        M('coinadmin_log')->add($arr);    }    /**     * 管理员操作日志     * @author Tang     */    public function logList(){        $map['status']=1;        $count=M('coinadmin_log')->where($map)->count();        $page=new \Think\Page($count,10);        $list=M('coinadmin_log')->where($map)->order('create_time desc')            ->limit($page->firstRow,$page->listRows)            ->select();        foreach($list as $key=>$v){            $list[$key]['user']=$this->getUserNickname($v['uid']);            $list[$key]['typename']=$this->getLogTypeName($v['type']);            $list[$key]['foruser']=$this->getUserNickname($v['foruid']);        }        $this->assign('_page',$page->show());        $this->assign('_list',$list);        $this->display('loglist');    }    /**     * 获取日志类型     * @author Tang     */    protected function getLogTypeName($type){        switch($type){            case 1:                $name='查看';                break;            case 2:                $name='增加金币';                break;            case 3:                $name='修改金币比率';                break;            case 4:                $name='扣除金币';                break;            default:                break;        }        return $name;    }    /*充值及购买vip*/    public function buycoin(){        $map['status']=1;        $map['type']=1;        $list=M('coin_vip')->where($map)->select();        $this->assign('list',$list);        $this->display();    }    public function newbuy(){        $id=I('get.id');        if(IS_POST){            $arr=I('post.');            if(!$arr['coin']){                $this->error('金币不能为零');            }            if(!$arr['pic']){                $this->error('请上传图片');            }            if($id){                $arr['id']=$id;                $arr['update_time']=time();                $res=M('coin_vip')->save($arr);            }else{                $arr['create_time']=time();                $arr['update_time']=time();                $res=M('coin_vip')->add($arr);            }            if($res){                $this->success('操作成功',U('buycoin'));            }else{                $this->error('操作失败');            }        }else{            if($id){                $info=M('coin_vip')->find($id);                $this->assign('info',$info);            }            $this->display();        }    }    public function delbuy(){        $id=I('ids');        if(is_array($id)){            $arr['id']=implode(',',$id);            $arr['status']=1;            $res=M('coin_vip')->where($arr)->setField('status',-1);        }else{            $res=M('coin_vip')->where(array('id'=>$id))->setField('status',-1);        }        if($res!==false){            $this->success('操作成功',U('buycoin'));        }else{            $this->error('操作失败');        }    }    public function buyvip(){        $map['status']=1;        $map['type']=2;        $list=M('coin_vip')->where($map)->select();        if($list){            foreach($list as $key=>$v){                if($v['vip']){                    $list[$key]['vipinfo']=M('user_vip')->find($v['vip']);                }            }        }        $this->assign('list',$list);        $this->display();    }    public function newbuyvip(){        $id=I('get.id');        if(IS_POST){            $arr=I('post.');            if(!$arr['coin']){                $this->error('金币不能为零');            }            if(!$arr['pic']){                $this->error('请上传图片');            }            if($id){                $arr['id']=$id;                $arr['update_time']=time();                $res=M('coin_vip')->save($arr);            }else{                $arr['create_time']=time();                $arr['update_time']=time();                $res=M('coin_vip')->add($arr);            }            if($res){                $this->success('操作成功',U('buyvip'));            }else{                $this->error('操作失败');            }        }else{            if($id){                $info=M('coin_vip')->find($id);                $this->assign('info',$info);            }            $vip=M('user_vip')->where(array('status'=>1))->order('level')->select();            $this->assign('vip',$vip);            $this->display();        }    }}